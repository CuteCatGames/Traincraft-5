import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        mavenCentral()
        maven {url = "http://files.minecraftforge.net/maven"}
        maven {url="./jdt"}
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: 'idea'

def timversion
def tcversion
def mcversion

sourceCompatibility = targetCompatibility = "1.7"
compileJava { sourceCompatibility = targetCompatibility = "1.7" }

ext.configFile = file "build.properties"
configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}


tcversion ="5.0.2"+config.modVersion.toString()
mcversion="1.7.10-10.13.4.1614-1.7.10"
timversion ="2.4 alpha"+getDate()
group= "src.train" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Traincraft"

static def getDate() {
    return new Date().format('yyyy-MM-dd-HH:mm')
}


minecraft {
    version = mcversion
    runDir = "run"
    replace "@VERSION1@", tcversion
    replaceIn "Info.java"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", tcversion
    inputs.property "mcversion", mcversion
    inputs.property "timversion", timversion
    inputs.property "tcversion", tcversion

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':tcversion, 'mcversion':project.minecraft.version, 'timversion':timversion, 'tcversion':tcversion
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

repositories {
    maven {
        name "ChickenBones"
        url "http://chickenbones.net/maven/"
    }
    maven {
        url = "http://maven.cil.li/"
    }
}

dependencies {
    repositories {
        ivy {
            name "BuildCraft"
            artifactPattern "http://www.mod-buildcraft.com/releases/BuildCraft/[revision]/[module]-[revision](-[classifier]).[ext]"
        }
    }

    compile "li.cil.oc:OpenComputers:MC1.7.10-1.5.+:api"

    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    compile name: "buildcraft", version: "7.1.16", classifier: "dev"
    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.138:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.7.46:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.5.110:dev"

    //TODO: replace this soon with a proper gradle import from TiM's git
    compile fileTree(dir: 'libs', include: ['*.jar'])
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}


idea
{
	module
	{
		inheritOutputDirs = true
	}
}
